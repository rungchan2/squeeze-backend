"""
Bearer 토큰 인증 테스트
"""
import asyncio
from app.services.supabase_unified_auth import get_unified_auth_service


async def test_bearer_auth():
    """Bearer 토큰으로 인증 테스트"""

    # auth.md에서 가져온 실제 Bearer 토큰
    bearer_token = "Bearer eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWpWNUwzWTBTVEZYTkZNMFVVMXRNVFlpTENKMGVYQWlPaUpLVjFRaWZRLmV5SmhZV3dpT2lKaFlXd3hJaXdpWVcxeUlqcGJleUp0WlhSb2IyUWlPaUp2WVhWMGFDSXNJblJwYldWemRHRnRjQ0k2TVRjMU5EUTVOekF3TVgxZExDSmhjSEJmYldWMFlXUmhkR0VpT25zaWIzSm5ZVzVwZW1GMGFXOXVYMmxrSWpvaU1tTTRNVGd5WTJFdFltWXlNaTAwTmpBMUxXSmpaVGt0TURVNFpUUTVORE5oTm1NMUlpd2ljSEp2ZG1sa1pYSWlPaUpsYldGcGJDSXNJbkJ5YjNacFpHVnljeUk2V3lKbGJXRnBiQ0lzSW1kdmIyZHNaU0pkTENKeWIyeGxJam9pWVdSdGFXNGlmU3dpWVhWa0lqb2lZWFYwYUdWdWRHbGpZWFJsWkNJc0ltVnRZV2xzSWpvaWJHVmxhREE1TURjM1FHZHRZV2xzTG1OdmJTSXNJbVY0Y0NJNk1UYzFORGt5TkRJd015d2lhV0YwSWpveE56VTBPVEl3TmpBekxDSnBjMTloYm05dWVXMXZkWE1pT21aaGJITmxMQ0pwYzNNaU9pSm9kSFJ3Y3pvdkwyVm5jSFIxZEc5NlpHWmphR3hwYjNWbGNHaHNMbk4xY0dGaVlYTmxMbU52TDJGMWRHZ3ZkakVpTENKd2FHOXVaU0k2SWlJc0luSnZiR1VpT2lKaGRYUm9aVzUwYVdOaGRHVmtJaXdpYzJWemMybHZibDlwWkNJNklqWmhOREJtTURFM0xXRXlNamN0TkRaaVlpMDRZVEUzTFRSbE4yTmhNV0psWkdVNVlTSXNJbk4xWWlJNkltSmpOMlF6WkRZeExXUXdZelV0TkRjMU5DMDVaalkxTFRRME5XVmlZemszT1RNeVl5SXNJblZ6WlhKZmJXVjBZV1JoZEdFaU9uc2lZWFpoZEdGeVgzVnliQ0k2SW1oMGRIQnpPaTh2YkdnekxtZHZiMmRzWlhWelpYSmpiMjUwWlc1MExtTnZiUzloTDBGRFp6aHZZMHMzWVdwTU1YTkZYMGhmTmtKYVJUaEVNMTlPU0dzMUxYWktURnBZVlc0eWMwTmtjRk16VDJVdFUyWmFXVlpXWnoxek9UWXRZeUlzSW1WdFlXbHNJam9pYkdWbGFEQTVNRGMzUUdkdFlXbHNMbU52YlNJc0ltVnRZV2xzWDNabGNtbG1hV1ZrSWpwMGNuVmxMQ0ptYVhKemRGOXVZVzFsSWpvaWVYa2lMQ0ptZFd4c1gyNWhiV1VpT2lMc25iVHRuYXpzc0t3aUxDSnBjM01pT2lKb2RIUndjem92TDJGalkyOTFiblJ6TG1kdmIyZHNaUzVqYjIwaUxDSnNZWE4wWDI1aGJXVWlPaUo1ZVNJc0ltNWhiV1VpT2lMc25iVHRuYXpzc0t3aUxDSndhRzl1WlY5MlpYSnBabWxsWkNJNlptRnNjMlVzSW5CcFkzUjFjbVVpT2lKb2RIUndjem92TDJ4b015NW5iMjluYkdWMWMyVnlZMjl1ZEdWdWRDNWpiMjB2WVM5QlEyYzRiMk5MTjJGcVRERnpSVjlJWHpaQ1drVTRSRE5mVGtock5TMTJTa3hhV0ZWdU1uTkRaSEJUTTA5bExWTm1XbGxXVm1jOWN6azJMV01pTENKd2NtOW1hV3hsWDJsdFlXZGxJam9pYUhSMGNITTZMeTlsWjNCMGRYUnZlbVJtWTJoc2FXOTFaWEJvYkM1emRYQmhZbUZ6WlM1amJ5OXpkRzl5WVdkbEwzWXhMMjlpYW1WamRDOXdkV0pzYVdNdmFXMWhaMlZ6TDNCMVlteHBZeTlpWXpka00yUTJNUzFrTUdNMUxUUTNOVFF0T1dZMk5TMDBORFZsWW1NNU56a3pNbU12TUROZk9GOHhOelEwTmpFMk5UTXpNakV4TG5OMlp5SXNJbkJ5YjNacFpHVnlYMmxrSWpvaU1UQXlOVFl5TXpjME9UUXhPRE14T1Rnek16RTBJaXdpYzNWaUlqb2lNVEF5TlRZeU16YzBPVFF4T0RNeE9UZ3pNekUwSW4xOS42eVJENnRVajd4allKSzJXYThBN2RidXlmQkxYQ25Vc0R5ZndNQ2NKY2h3IiwidG9rZW5fdHlwZSI6ImJlYXJlciIsImV4cGlyZXNfaW4iOjM2MDAsImV4cGlyZXNfYXQiOjE3NTQ5MjQyMDMsInJlZnJlc2hfdG9rZW4iOiJ1cnRwenJjZHNwMjMiLCJ1c2VyIjp7ImlkIjoiYmM3ZDNkNjEtZDBjNS00NzU0LTlmNjUtNDQ1ZWJjOTc5MzJjIiwiYXVkIjoiYXV0aGVudGljYXRlZCIsInJvbGUiOiJhdXRoZW50aWNhdGVkIiwiZW1haWwiOiJsZWVoMDkwNzdAZ21haWwuY29tIiwiZW1haWxfY29uZmlybWVkX2F0IjoiMjAyNS0wNC0xMlQxNTowMzoxNC42MTA1MDNaIiwicGhvbmUiOiIiLCJjb25maXJtZWRfYXQiOiIyMDI1LTA0LTEyVDE1OjAzOjE0LjYxMDUwM1oiLCJsYXN0X3NpZ25faW5fYXQiOiIyMDI1LTA4LTA2VDE2OjE2OjQxLjc2Mzk0NFoiLCJhcHBfbWV0YWRhdGEiOnsicHJvdmlkZXIiOiJlbWFpbCIsInByb3ZpZGVycyI6WyJlbWFpbCIsImdvb2dsZSJdfSwidXNlcl9tZXRhZGF0YSI6eyJhdmF0YXJfdXJsIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzdhakwxc0VfSF82QlpFOEQzX05IazUtdkpMWlhVbjJzQ2RwUzNPZS1TZlpZVlZnPXM5Ni1jIiwiZW1haWwiOiJsZWVoMDkwNzdAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImZ1bGxfbmFtZSI6IuydtO2drOywrCIsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsIm5hbWUiOiLsnbTtnazssKwiLCJwaG9uZV92ZXJpZmllZCI6ZmFsc2UsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NLN2FqTDFzRV9IXzZCWkU4RDNfTkhrNS12SkxaWFVuMnNDZHBTM09lLVNmWllWVmc9czk2LWMiLCJwcm92aWRlcl9pZCI6IjEwMjU2MjM3NDk0MTgzMTk4MzMxNCIsInN1YiI6IjEwMjU2MjM3NDk0MTgzMTk4MzMxNCJ9LCJpZGVudGl0aWVzIjpbeyJpZGVudGl0eV9pZCI6ImFlZTE2YTBhLTliYjUtNDI3Yi05Mzk4LTllMWY2YmYwYWMyNiIsImlkIjoiYmM3ZDNkNjEtZDBjNS00NzU0LTlmNjUtNDQ1ZWJjOTc5MzJjIiwidXNlcl9pZCI6ImJjN2QzZDYxLWQwYzUtNDc1NC05ZjY1LTQ0NWViYzk3OTMyYyIsImlkZW50aXR5X2RhdGEiOnsiZW1haWwiOiJsZWVoMDkwNzdAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwaG9uZV92ZXJpZmllZCI6ZmFsc2UsInN1YiI6ImJjN2QzZDYxLWQwYzUtNDc1NC05ZjY1LTQ0NWViYzk3OTMyYyJ9LCJwcm92aWRlciI6ImVtYWlsIiwibGFzdF9zaWduX2luX2F0IjoiMjAyNS0wNC0xMlQxNTowMzoxNC42MDUwMDlaIiwiY3JlYXRlZF9hdCI6IjIwMjUtMDQtMTJUMTU6MDM6MTQuNjA1MDYzWiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA0LTEyVDE1OjAzOjE0LjYwNTA2M1oiLCJlbWFpbCI6ImxlZWgwOTA3N0BnbWFpbC5jb20ifSx7ImlkZW50aXR5X2lkIjoiNTJhMTAzYTQtMmQ3MS00NDVmLTk3MWMtZmI2ODRmYWYwYzI1IiwiaWQiOiIxMDI1NjIzNzQ5NDE4MzE5ODMzMTQiLCJ1c2VyX2lkIjoiYmM3ZDNkNjEtZDBjNS00NzU0LTlmNjUtNDQ1ZWJjOTc5MzJjIiwiaWRlbnRpdHlfZGF0YSI6eyJhdmF0YXJfdXJsIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzdhakwxc0VfSF82QlpFOEQzX05IazUtdkpMWlhVbjJzQ2RwUzNPZS1TZlpZVlZnPXM5Ni1jIiwiZW1haWwiOiJsZWVoMDkwNzdAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImZ1bGxfbmFtZSI6IuydtO2drOywrCIsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsIm5hbWUiOiLsnbTtnazssKwiLCJwaG9uZV92ZXJpZmllZCI6ZmFsc2UsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NLN2FqTDFzRV9IXzZCWkU4RDNfTkhrNS12SkxaWFVuMnNDZHBTM09lLVNmWllWVmc9czk2LWMiLCJwcm92aWRlcl9pZCI6IjEwMjU2MjM3NDk0MTgzMTk4MzMxNCIsInN1YiI6IjEwMjU2MjM3NDk0MTgzMTk4MzMxNCJ9LCJwcm92aWRlciI6Imdvb2dsZSIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDQtMjBUMTU6NDc6MjkuNjQ1MDYyWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA0LTIwVDE1OjQ3OjI5LjY0NTExM1oiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wOC0wNlQxNjoxNjozOS45NDI3MzhaIiwiZW1haWwiOiJsZWVoMDkwNzdAZ21haWwuY29tIn1dLCJjcmVhdGVkX2F0IjoiMjAyNS0wNC0xMlQxNTowMzoxNC41ODc3MTlaIiwidXBkYXRlZF9hdCI6IjIwMjUtMDgtMTFUMTM6NTY6NDMuNjgxODVaIiwiaXNfYW5vbnltb3VzIjpmYWxzZX19"

    print(f"Bearer token (first 100 chars): {bearer_token[:100]}...")
    print(f"Token length: {len(bearer_token)}")

    # 인증 서비스 테스트
    auth_service = get_unified_auth_service()

    try:
        user_info = await auth_service.authenticate_token(bearer_token)
        print("\n✅ Authentication successful!")
        print(f"User ID: {user_info.get('id')}")
        print(f"Email: {user_info.get('email')}")
        print(f"Role: {user_info.get('role')}")
        print(f"Organization ID: {user_info.get('organization_id')}")

        # 권한 확인 테스트
        role = user_info.get("role", "user")
        is_admin = auth_service.check_permission(role, "admin")
        is_teacher = auth_service.check_permission(role, "teacher")
        is_user = auth_service.check_permission(role, "user")

        print(f"\n권한 확인 (현재 role: {role}):")
        print(f"- Admin 권한: {is_admin}")
        print(f"- Teacher 권한: {is_teacher}")
        print(f"- User 권한: {is_user}")

    except Exception as e:
        print(f"\n❌ Authentication failed: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_bearer_auth())
